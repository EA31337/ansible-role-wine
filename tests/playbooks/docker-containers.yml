---
- name: Configure Docker container
  # Note: Since facts are not gathered, we're checking for ansible_user_id, connection_user or UID instead.
  become: >-
    {{ (connection_user is defined and connection_user != 'root')
    or (ansible_user_id is defined and ansible_user_id != 'root')
    or (lookup('env', 'UID') | int != 0)
    }}
  # Use su as become_method as sudo is not available in all containers.
  become_method: ansible.builtin.su
  gather_facts: false
  hosts: docker_containers

  pre_tasks:
    - name: Ensure container is started
      community.docker.docker_container:
        name: "{{ inventory_hostname }}"
        image: "{{ container_image }}"
        state: started
        command: sleep infinity
      delegate_to: localhost

    - name: Wait for container to be ready
      community.docker.docker_container_info:
        name: "{{ inventory_hostname }}"
      register: container_info
      until:
        - container_info is defined
        - container_info.container.State.Running | default(false) | bool
      changed_when: false
      delay: 2
      delegate_to: localhost
      retries: 10

    - name: Install Python 3 on Alpine
      ansible.builtin.raw: |
        test -e "{{ ansible_python_interpreter }}" || (apk update && apk add --no-cache python3 py3-pip)
      changed_when: false
      when: container_image is search("alpine")

    - name: Install Python 3 on NixOS
      ansible.builtin.raw: |
        test -e "{{ ansible_python_interpreter }}" || (nix-env -iA nixpkgs.python3 nixpkgs.python3Packages.pip)
      changed_when: false
      when: container_image is search("nixos")

    - name: Install Python 3 on Ubuntu/Debian
      ansible.builtin.raw: |
        test -e "{{ ansible_python_interpreter }}" || (apt-get update && apt-get install -y python3 python3-pip)
      changed_when: false
      when: container_image is search("ubuntu") or container_image is search("debian")

    - name: Gather facts
      ansible.builtin.setup:

    - name: Install Python packages for Ubuntu/Debian
      ansible.builtin.apt:
        name:
          - python3
          - python3-pip
          - python3-setuptools
        state: present
        update_cache: true
      when: container_image is search("ubuntu") or container_image is search("debian")

  tags: always
  vars:
    container_image_map:
      wine-on-alpine-latest: alpine:latest
      wine-on-debian-latest: debian:latest
      wine-on-nixos-latest: nixos/nix
      wine-on-ubuntu-jammy: ubuntu:jammy
      wine-on-ubuntu-latest: ubuntu:latest
      wine-on-ubuntu-noble: ubuntu:noble
    container_image: "{{ container_image_map[inventory_hostname] | default('ubuntu:latest') }}"
  vars_files:
    - ../../vars/main.yml

- name: Install ea31337.wine role on all containers
  hosts: docker_containers
  gather_facts: true
  tags: always
  tasks:
    - name: Installs ea31337.wine role
      ansible.builtin.import_role:
        name: ea31337.wine
  vars:
    wine_install_winetricks: true

  post_tasks:
    - name: Stop Docker containers
      community.docker.docker_container:
        name: "{{ inventory_hostname }}"
        state: stopped
      delegate_to: localhost
      failed_when: false
